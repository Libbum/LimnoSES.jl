var documenterSearchIndex = {"docs":
[{"location":"api/","page":"Public API","title":"Public API","text":"None of this is final, but some current public facing functions:","category":"page"},{"location":"api/","page":"Public API","title":"Public API","text":"initialise\nplanner\nplan","category":"page"},{"location":"api/#LimnoSES.initialise","page":"Public API","title":"LimnoSES.initialise","text":"initialise()\n\nReturns a populated model initialised and ready to run.\n\n\n\n\n\n","category":"function"},{"location":"api/#LimnoSES.planner","page":"Public API","title":"LimnoSES.planner","text":"planner(plan(Angling))\nplanner(plan(Planting; rate=5e-3),\n        plan(Trawling, 1:3))\n\nProvides a complete schedule of interventions for a Municipality. Must be used in conjunction with plan.\n\n\n\n\n\n","category":"function"},{"location":"api/#LimnoSES.plan","page":"Public API","title":"LimnoSES.plan","text":"plan(Angling) # Assume always on\nplan(Angling; rate = 2.5e-3) # Always on with custom rate\nplan(Angling, 7; rate = 3.2e-3) # Only one year (custom rate)\nplan(Angling, 3:5) # Only years 3 to 5\nplan(Angling, [(period = 1:4, ),\n               (year = 5, rate = 7.2e-3),\n               (period = 7:9, )]) # Active in years 1-5, 7-9 with a custom rate\n                                  # in year 5\n\nHelper that provides complex scheduling for interventions with a simple interface.\n\nThe return type is Dict{Int, Vector{Intervention}}, were the key is each year the collection of interventions will be active. As a convention, year -1 denotes an 'always active' intervention.\n\nThe result can be provided to municipality.interventions, although this function should almost always used in conjuction with planner.\n\n\n\n\n\n","category":"function"},{"location":"api/#NutrientSeries","page":"Public API","title":"NutrientSeries","text":"","category":"section"},{"location":"api/","page":"Public API","title":"Public API","text":"NutrientSeries is an abstract type from which concrete types can be implemented to describe the dynamics of nutrient introduction to the lake.","category":"page"},{"location":"api/","page":"Public API","title":"Public API","text":"Constant\nDynamic\nTransientUp\nTransientDown","category":"page"},{"location":"api/#LimnoSES.Constant","page":"Public API","title":"LimnoSES.Constant","text":"Constant()\n\nNutrient level remains constant at the level of init_nutrients.\n\n\n\n\n\n","category":"type"},{"location":"api/#LimnoSES.Dynamic","page":"Public API","title":"LimnoSES.Dynamic","text":"Dynamic()\n\nNutrient runoff is managed by the municipality by incentivising households to upgrade sewage systems that seep P into the lake.\n\n\n\n\n\n","category":"type"},{"location":"api/#LimnoSES.TransientUp","page":"Public API","title":"LimnoSES.TransientUp","text":"TransientUp(;start_year = 11, post_target_series = Constant())\n\nSynthetic nutrient profile that alters lake dynamics regardless of municipal management.\n\nstart_year: year when nutrients begin to increase with a rate of nutrient_change.\npost_target_series: behaviour after target_nutrients value is reached.   Default is TransientDown(start_year = 0, post_target_series = Constant())\n\nwarning: Warning\nPost target series selection must include a final Constant phase, otherwise an infinite recursion cascade will occur.\n\n\n\n\n\n","category":"type"},{"location":"api/#LimnoSES.TransientDown","page":"Public API","title":"LimnoSES.TransientDown","text":"TransientDown(;start_year = 11, post_target_series = Constant())\n\nSynthetic nutrient profile that alters lake dynamics regardless of municipal management.\n\nstart_year: year when nutrients begin to decrease with a rate of nutrient_change.\npost_target_series: behaviour after target_nutrients value is reached.   Default is TransientUp(start_year = 0, post_target_series = Constant())\n\nwarning: Warning\nPost target series selection must include a final Constant phase, otherwise an infinite recursion cascade will occur.\n\n\n\n\n\n","category":"type"},{"location":"dev/","page":"Developer Docs","title":"Developer Docs","text":"Non exported functions can be found here.","category":"page"},{"location":"dev/","page":"Developer Docs","title":"Developer Docs","text":"LimnoSES.type2dict\nLimnoSES.nutrient_load!\nLimnoSES.active_interventions","category":"page"},{"location":"dev/#LimnoSES.type2dict","page":"Developer Docs","title":"LimnoSES.type2dict","text":"type2dict(struct; prefix = \"\")\n\nConverts a struct into a Dict. Borrowed from DrWatson, but extended to allow some prefix to be attached. This is helpful when merging multiple structs into one Dict.\n\n\n\n\n\n","category":"function"},{"location":"dev/#LimnoSES.nutrient_load!","page":"Developer Docs","title":"LimnoSES.nutrient_load!","text":"nutrient_load(model::ABM, series<:NutrientSeries)\n\nUpdates lake nutrient concentration accorting to series type.\n\nSee NutrientSeries for more details.\n\n\n\n\n\n","category":"function"},{"location":"dev/#LimnoSES.active_interventions","page":"Developer Docs","title":"LimnoSES.active_interventions","text":"active_interventions(municipality, year)\n\nReturns all active interventions in the planner. Due to the year = -1 -> always active convention we must merge the current year's plan with the -1 key (if extant).\n\n\n\n\n\n","category":"function"},{"location":"","page":"Introduction","title":"Introduction","text":"LimnoSES.jl is a dynamical system, agent based model hybrid, focusing on socio-ecological interactions in lake systems.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Powered by the Agents.jl ABM framework and the DifferentialEquations.jl ecosystem.","category":"page"}]
}
